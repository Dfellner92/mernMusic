{"ast":null,"code":"var _jsxFileName = \"/Users/danielfellner/Desktop/postBootcampProjects/mernMusic/frontend-redux-starter/src/components/movies/MovieForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { editMovieAction, getMovieAction, newMovieAction } from '../../actions/moviesActions';\n\nconst MovieForm = ({\n  history,\n  match\n}) => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const movie = useSelector(state => state.movies.movie);\n  const [title, setTitle] = useState('New Movie');\n  useEffect(() => {\n    if (match.params.id) {\n      setTitle('Edit Movie');\n      dispatch(getMovieAction(+match.params.id));\n    }\n  }, [dispatch, match.params.id]);\n\n  const submitNewMovie = data => {\n    if (match.params.id) {\n      dispatch(editMovieAction({ ...data,\n        id: +match.params.id\n      }));\n      history.push('/movies');\n    } else {\n      dispatch(newMovieAction(data));\n      history.push('/movies');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4 font-weight-bold \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(submitNewMovie),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control  \",\n    placeholder: \"Movie Title\",\n    name: \"title\",\n    ref: register({\n      required: true\n    }),\n    defaultValue: movie.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-weight-bold alert alert-danger text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Url\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control  \",\n    placeholder: \"Movie URL\",\n    defaultValue: movie.url,\n    name: \"url\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), errors.url && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-weight-bold alert alert-danger text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control  \",\n    placeholder: \"Movie Rating\",\n    defaultValue: movie.rating,\n    name: \"rating\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), errors.rating && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-weight-bold alert alert-danger text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info rounded-pill font-weight-bold text-uppercase d-block w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Save\"))))));\n};\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/danielfellner/Desktop/postBootcampProjects/mernMusic/frontend-redux-starter/src/components/movies/MovieForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useForm","editMovieAction","getMovieAction","newMovieAction","MovieForm","history","match","dispatch","register","handleSubmit","errors","movie","state","movies","title","setTitle","params","id","submitNewMovie","data","push","required","url","rating"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SACEC,eADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,6BAJP;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AACxC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCV,OAAO,EAAlD;AACA,QAAMW,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,KAAzB,CAAzB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,WAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAK,CAACU,MAAN,CAAaC,EAAjB,EAAqB;AACnBF,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACAR,MAAAA,QAAQ,CAACL,cAAc,CAAC,CAACI,KAAK,CAACU,MAAN,CAAaC,EAAf,CAAf,CAAR;AACD;AACF,GALQ,EAKN,CAACV,QAAD,EAAWD,KAAK,CAACU,MAAN,CAAaC,EAAxB,CALM,CAAT;;AAOA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAIb,KAAK,CAACU,MAAN,CAAaC,EAAjB,EAAqB;AACnBV,MAAAA,QAAQ,CAACN,eAAe,CAAC,EAAE,GAAGkB,IAAL;AAAWF,QAAAA,EAAE,EAAE,CAACX,KAAK,CAACU,MAAN,CAAaC;AAA7B,OAAD,CAAhB,CAAR;AACAZ,MAAAA,OAAO,CAACe,IAAR,CAAa,SAAb;AACD,KAHD,MAGO;AACLb,MAAAA,QAAQ,CAACJ,cAAc,CAACgB,IAAD,CAAf,CAAR;AACAd,MAAAA,OAAO,CAACe,IAAR,CAAa,SAAb;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDN,KAApD,CADF,eAEE;AAAM,IAAA,QAAQ,EAAEL,YAAY,CAACS,cAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,GAAG,EAAEV,QAAQ,CAAC;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CALf;AAME,IAAA,YAAY,EAAEV,KAAK,CAACG,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGJ,MAAM,CAACI,KAAP,iBACC;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXJ,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,YAAY,EAAEH,KAAK,CAACW,GAJtB;AAKE,IAAA,IAAI,EAAC,KALP;AAME,IAAA,GAAG,EAAEd,QAAQ,CAAC;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGX,MAAM,CAACY,GAAP,iBACC;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXJ,CAjBF,eAiCE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,YAAY,EAAEX,KAAK,CAACY,MAJtB;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,GAAG,EAAEf,QAAQ,CAAC;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGX,MAAM,CAACa,MAAP,iBACC;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXJ,CAjCF,eAkDE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,yEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDF,CAFF,CADF,CADF,CADF,CADF;AAoED,CA3FD;;AA4FA,eAAenB,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport {\n  editMovieAction,\n  getMovieAction,\n  newMovieAction,\n} from '../../actions/moviesActions';\n\nconst MovieForm = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const movie = useSelector((state) => state.movies.movie);\n  const [title, setTitle] = useState('New Movie');\n\n  useEffect(() => {\n    if (match.params.id) {\n      setTitle('Edit Movie');\n      dispatch(getMovieAction(+match.params.id));\n    }\n  }, [dispatch, match.params.id]);\n\n  const submitNewMovie = (data) => {\n    if (match.params.id) {\n      dispatch(editMovieAction({ ...data, id: +match.params.id }));\n      history.push('/movies');\n    } else {\n      dispatch(newMovieAction(data));\n      history.push('/movies');\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center mt-5\">\n      <div className=\"col-md-8\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h2 className=\"text-center mb-4 font-weight-bold \">{title}</h2>\n            <form onSubmit={handleSubmit(submitNewMovie)}>\n              <div className=\"form-group\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control  \"\n                  placeholder=\"Movie Title\"\n                  name=\"title\"\n                  ref={register({ required: true })}\n                  defaultValue={movie.title}\n                />\n                {errors.title && (\n                  <div className=\"font-weight-bold alert alert-danger text-center mt-4\">\n                    This field is required\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Url</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control  \"\n                  placeholder=\"Movie URL\"\n                  defaultValue={movie.url}\n                  name=\"url\"\n                  ref={register({ required: true })}\n                />\n                {errors.url && (\n                  <div className=\"font-weight-bold alert alert-danger text-center mt-4\">\n                    This field is required\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Rating</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control  \"\n                  placeholder=\"Movie Rating\"\n                  defaultValue={movie.rating}\n                  name=\"rating\"\n                  ref={register({ required: true })}\n                />\n                {errors.rating && (\n                  <div className=\"font-weight-bold alert alert-danger text-center mt-4\">\n                    This field is required\n                  </div>\n                )}\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-info rounded-pill font-weight-bold text-uppercase d-block w-100\"\n              >\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}