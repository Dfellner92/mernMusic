{"ast":null,"code":"import { FETCH_MOVIES_SUCCESS, FETCH_MOVIES_ERROR, FETCH_MOVIES_START, DELETE_MOVIE_START, DELETE_MOVIE_SUCCESS, DELETE_MOVIE_ERROR, EDIT_MOVIE_ERROR, EDIT_MOVIE_START, EDIT_MOVIE_SUCCESS, NEW_MOVIE_START, NEW_MOVIE_SUCCESS, NEW_MOVIE_ERROR, GET_MOVIE_ERROR, GET_MOVIE_SUCCESS, GET_MOVIE_START } from '../types';\nconst initialState = {\n  movies: [],\n  error: null,\n  loading: false,\n  movie: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_MOVIES_START:\n      return { ...state,\n        loading: true,\n        movie: {}\n      };\n\n    case FETCH_MOVIES_SUCCESS:\n      return { ...state,\n        movies: action.payload,\n        loading: false,\n        error: false,\n        movie: {}\n      };\n\n    case FETCH_MOVIES_ERROR:\n      return { ...state,\n        movies: [],\n        loading: false,\n        error: true,\n        movie: {}\n      };\n\n    case DELETE_MOVIE_START:\n      return { ...state\n      };\n\n    case DELETE_MOVIE_SUCCESS:\n      return { ...state,\n        error: false,\n        movies: state.movies.filter(movie => movie.id !== action.payload)\n      };\n\n    case DELETE_MOVIE_ERROR:\n      return { ...state,\n        error: true\n      };\n\n    case EDIT_MOVIE_START:\n      return { ...state,\n        error: null\n      };\n\n    case EDIT_MOVIE_SUCCESS:\n      return { ...state,\n        error: false,\n        movies: state.movies.map(movie => movie.id === action.payload.id ? movie = action.payload : movie)\n      };\n\n    case EDIT_MOVIE_ERROR:\n      return { ...state,\n        error: true\n      };\n\n    case NEW_MOVIE_START:\n      return { ...state,\n        error: null\n      };\n\n    case NEW_MOVIE_SUCCESS:\n      return { ...state,\n        error: false,\n        movies: [...state.movies, action.payload]\n      };\n\n    case NEW_MOVIE_ERROR:\n      return { ...state,\n        error: true\n      };\n\n    case GET_MOVIE_START:\n      return { ...state,\n        error: null\n      };\n\n    case GET_MOVIE_SUCCESS:\n      return { ...state,\n        error: false,\n        movie: action.payload\n      };\n\n    case GET_MOVIE_ERROR:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/danielfellner/Desktop/postBootcampProjects/mernMusic/frontend-redux-starter/src/reducers/moviesReducer.js"],"names":["FETCH_MOVIES_SUCCESS","FETCH_MOVIES_ERROR","FETCH_MOVIES_START","DELETE_MOVIE_START","DELETE_MOVIE_SUCCESS","DELETE_MOVIE_ERROR","EDIT_MOVIE_ERROR","EDIT_MOVIE_START","EDIT_MOVIE_SUCCESS","NEW_MOVIE_START","NEW_MOVIE_SUCCESS","NEW_MOVIE_ERROR","GET_MOVIE_ERROR","GET_MOVIE_SUCCESS","GET_MOVIE_START","initialState","movies","error","loading","movie","state","action","type","payload","filter","id","map"],"mappings":"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","sourcesContent":["import {\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_ERROR,\n  FETCH_MOVIES_START,\n  DELETE_MOVIE_START,\n  DELETE_MOVIE_SUCCESS,\n  DELETE_MOVIE_ERROR,\n  EDIT_MOVIE_ERROR,\n  EDIT_MOVIE_START,\n  EDIT_MOVIE_SUCCESS,\n  NEW_MOVIE_START,\n  NEW_MOVIE_SUCCESS,\n  NEW_MOVIE_ERROR,\n  GET_MOVIE_ERROR,\n  GET_MOVIE_SUCCESS,\n  GET_MOVIE_START,\n} from '../types';\n\nconst initialState = {\n  movies: [],\n  error: null,\n  loading: false,\n  movie: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_MOVIES_START:\n      return {\n        ...state,\n        loading: true,\n        movie: {},\n      };\n    case FETCH_MOVIES_SUCCESS:\n      return {\n        ...state,\n        movies: action.payload,\n        loading: false,\n        error: false,\n        movie: {},\n      };\n\n    case FETCH_MOVIES_ERROR:\n      return {\n        ...state,\n        movies: [],\n        loading: false,\n        error: true,\n        movie: {},\n      };\n\n    case DELETE_MOVIE_START:\n      return {\n        ...state,\n      };\n    case DELETE_MOVIE_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        movies: state.movies.filter((movie) => movie.id !== action.payload),\n      };\n    case DELETE_MOVIE_ERROR:\n      return {\n        ...state,\n        error: true,\n      };\n    case EDIT_MOVIE_START:\n      return {\n        ...state,\n        error: null,\n      };\n    case EDIT_MOVIE_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        movies: state.movies.map((movie) =>\n          movie.id === action.payload.id ? (movie = action.payload) : movie\n        ),\n      };\n    case EDIT_MOVIE_ERROR:\n      return {\n        ...state,\n        error: true,\n      };\n    case NEW_MOVIE_START:\n      return {\n        ...state,\n        error: null,\n      };\n    case NEW_MOVIE_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        movies: [...state.movies, action.payload],\n      };\n    case NEW_MOVIE_ERROR:\n      return {\n        ...state,\n        error: true,\n      };\n    case GET_MOVIE_START:\n      return {\n        ...state,\n        error: null,\n      };\n    case GET_MOVIE_SUCCESS:\n      return {\n        ...state,\n        error: false,\n        movie: action.payload,\n      };\n    case GET_MOVIE_ERROR:\n      return {\n        ...state,\n        error: true,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}